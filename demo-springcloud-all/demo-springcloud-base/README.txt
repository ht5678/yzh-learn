配置文件加载的顺序:

*项目的根目录config下
*项目的根目录applications.properties
*项目的resoures目录下的config目录
*项目的resoures目录下的配置文件


---

配置文件中   ---  代表分割 , 只能是3个,多一个或者少一个都不行

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
eureka练习:
---
demo-springcloud-first-114:服务注册中心
demo-springcloud-first-police:服务提供者
demo-springcloud-first-person:服务消费者


测试流程:
*启动demo-springcloud-first-114的serverApp
*启动demo-springcloud-first-police的policeServer
*启动demo-springcloud-first-person的personServer

*打开:
	http://localhost:8761/
 	http://localhost:8081/router
 	

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 	
---eureka集群
*cloud-114   		ServerApp.java   启动输入 slave1  , 启动输入slave2 , 启动两个实例
*cloud-police		启动输入8080 , 启动输入8081,启动两个实例
*cloud-person 	启动,访问  http://localhost:9000/router , 多次刷新来自不同的police


------------------------------------------------------------------------------------------------------------------------------------------------------------------------

---客户端健康检查和常用配置
*心跳配置
*服务列表抓取配置
*元数据的配置和使用
*关闭自我保护模式


------------------------------------------------------------------------------------------------------------------------------------------------------------------------
客户端健康状态actuator:

http://localhost:8080/actuator
http://localhost:8080/actuator/health

通过这个接口修改  注册服务 的在线状态 
http://localhost:8080/db/true
------------------------------------------------------------------------------------------------------------------------------------------------------------------------


ribbon简介(用于客户端):
*负载均衡框架,支持可插拔的负载均衡规则
*支持多种协议,如HTTP , UDP 等
*提供负载均衡客户端


负载均衡器组件:
*一个负载均衡,至少提供以下功能:
	-要维护各服务器的IP等信息
	-根据特定逻辑选取服务器
*为了实现基本的负载均衡功能,ribbon的负载均衡器有三大子模块:
	-rule
	-ping
	-serverList
	
